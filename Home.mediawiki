[[logo-160.png]]

<big>'''A cross-platform user-mode library, for generic access to USB devices'''</big>

= Description =
== About ==

'''libusb''' is a cross-platform user-mode library that provides access to USB devices. The project website is at [http://libusb.info libusb.info]. The old project site [http://libusb.org libusb.org] should not be used.

The current API is of 1.0 version (libusb-1.0 API). You can still use the legacy API (libusb-0.1 API) with the [https://github.com/libusb/libusb-compat-0.1 libusb-compat-0.1 wrapper].

Take note [https://sourceforge.net/p/libusb-win32/wiki/Home/ libusb-win32] is a separate project and it is in bug-fix-only mode. New project should migrate to use libusb Windows backend.

== Features ==

* Supports all the major platforms: Linux, OS X, Windows, OpenBSD/NetBSD, Solaris and Haiku
* Supports all versions of USB, from 1.0 to 3.1
* Unified modern API, that provides both synchronous and asynchronous access
* User-mode: no need for kernel access

= Downloads =

libusb releases can be accessed from the [http://sourceforge.net/projects/libusb/files/releases releases] directory.

= Documentation =

* The libusb-1.0 API Reference can be accessed [http://libusb.sourceforge.net/api-1.0/ HERE]
* A [[FAQ|FAQ]] is also available.

= Support =
The preferred way to get support is to use the mailing list. The libusb mailing-list is hosted on Sourceforge. You can subscribe and check the archive [https://lists.sourceforge.net/lists/listinfo/libusb-devel HERE].

For your convenience, [http://marc.info/?l=libusb-devel&r=1&w=2 marc.info] may provide a more user-friendly version of the mailing list archives.

For historical reasons, the libusbx mailing list archive can be found [https://sourceforge.net/p/libusbx/mailman/libusbx-devel here]. 

You are also encouraged to check the [https://github.com/libusb/libusb/wiki/_pages Wiki Pages] for topics of interest.

= Development =

== Supported Environments ==

* Linux &#91;'''status''': Stable&#93;
** Any modern Linux system with <code>usbfs</code>.

* Mac OS X &#91;'''status''': Stable&#93;
** Any modern version of Mac OS X (PowerPC or x86 either in 32 and 64 bits or Apple Silicon)
** Note: for USB 3.0 port,please use Mac OS X Mountain Lion 10.8.2 or later.
** Note: the device should not be bound to a kernel driver. You can use a codeless kext to achieve that if there is a kernel driver (eg: HID or USB Mass Storage) which already binds to the device.
* [[Windows]] &#91;'''status''': Stable&#93;
** [http://mingw-w64.sourceforge.net/ MinGW-w64] 32bit/64bit GCC under Windows. [https://linkify.me/W7rHz14 MSYS2] is a good MinGW-w64 distribution for Windows. To compile a library that is both 32 and 64 bit compatible, you should use a version of MinGW-w64 that supports both <code>-m32</code> and <code>-m64</code> (a.k.a. "multilib"). A pre-built multilib version can be downloaded with [http://tdm-gcc.tdragon.net/download TDM64].
** Microsoft Visual C++ (Visual Studio).
** [https://linkify.me/W7rHz14 Windows DDK build environment (dropped in 1.0.24)]
** Device driver support: WinUSB, HID, libusb-win32 (libusb0.sys, not recommended), libusbK, usbdk.
* OpenBSD and NetBSD &#91;'''status''': EXPERIMENTAL&#93;
** Only device with <code>ugen</code> driver are supported

* '''[[Android|Android]]''' -- &#91;'''status''': EXPERIMENTAL&#93; 

* Solaris support was added in libusb-1.0.21

* Haiku support was added in libusb-1.0.20

More information on the Windows implementation can be obtained from the '''[[Windows|Windows Backend]]''' page.

Note: FreeBSD 8 and above include a FreeBSD-specific reimplementation of the libusb API, so your applications will probably work there too. The source code for this library can be found [http://svn.freebsd.org/viewvc/base/head/lib/libusb/ here].

IBM has a partial port of libusb for AIX as well. Please refer to the IBM website [https://www.ibm.com/developerworks/aix/library/au-aix-libusb/index.html here].

If you are interested in porting to other platforms, the [https://github.com/libusb/libusb/blob/master/PORTING PORTING] file tells you where to start. We are more than happy to help out here, please write to the mailing list with your questions and feedback.

== Accessing the Source ==

The latest development tree is always available from [http://git-scm.com/ git].

For those not familiar with git, here are the commands one can use to retrieve '''libusb''':
<pre>
# retrieve development branch (this only needs to be done once)
git clone git://github.com/libusb/libusb.git
cd libusb
</pre>

<pre>
# for further updates, once the clone has been done
git pull                                                           
</pre>

You can also browse the git development tree from [https://github.com/libusb/libusb].

When compiling from git, remember that you may have to run <code>./autogen.sh</code>, <code>./bootstrap.sh</code> or run the autotools creation utilities, in order to have <code>configure</code> and <code>Makefile</code> created for you. The difference between <code>autogen.sh</code> and <code>bootstrap.sh</code> is that the former will invoke configure with a set of default options, whereas the latter will not.

To create projects relying on '''libusb''', please refer to the samples in the <code>examples/</code> subdirectory.

== Contributing ==

Please submit a pull request (PR) at [https://github.com/libusb/libusb/pulls]. If you don't have any ready code yet, but want to suggest a new feature, you can file an issue at [https://github.com/libusb/libusb/issues].

Once all feedback has been addressed and it is a change we want to include, we'll add your commit to libusb. Note that the pull request status will show up as “Closed” instead of “Merged” because of the way we merge contributions. Don't worry: you will still get author credit in the actual merged commit.

= Open Source projects using libusb =

* [http://openocd.sourceforge.net/ OpenOCD] and other [http://www.intra2net.com/en/developer/libftdi/ libFTDI] based projects
* [http://urjtag.org/ UrJTAG] - Universal JTAG Library
* [http://www.cups.org/ CUPS] - An Open Source printing system
* [http://www.sane-project.org/ SANE] - Scanner Access Now Easy
* [https://github.com/gregkh/usbutils usbutils] - USB utilities for Linux
* [http://sigrok.org sigrok] - A signal analysis software suite for a very large range of devices
* [https://github.com/airspy/airspyone_host airspy host] AirSpy's usemode driver and associated tools
* [http://openkinect.org/ OpenKinect] - Library and appplications for the Microsoft Xbox Kinect device
* [https://github.com/OpenNI/OpenNI OpenNI] - An Open Source SDK for 3D sensing 
* [https://github.com/bluekitchen/btstack BTstack] - A Portable User-Space Bluetooth Stack
* [http://usbpicprog.org/ UsbPicProg] - An Open Source PIC programmer
* [http://www.freedesktop.org/wiki/Software/fprint/ fprint] - A fingerprint scanning application and library
* [https://sourceforge.net/projects/libdc1394/ IIDC Camera Control Library libdc1394] - Capture and control API for IIDC compliant cameras
* [http://git.tuxfamily.org/microdiausp/microdiauserspace.git Microdia] - A Microdial webcam capture application
* [http://cgit.sukimashita.com/usbmuxd.git/ usbmuxd] - A socket daemon to multiplex connections from and to iOS devices
* [https://github.com/dwery/coldsync coldsync] - Palm OS synchronization utility
* [http://www.xdimax.com/sub20/sub20.html#DLD SUB-20] - Software for the Dimax SUB-20 Multi Interface USB Adapter
* [http://qdot.github.com/libnifalcon libnifalcon] - A driver for the Novint Falcon Haptic Device
* [http://xpiocards.sourceforge.net/ XPIOCARDS] - A flight simulator interface
* [http://labjack.com/support/linux-and-mac-os-x-drivers Exodriver] - Open Source drivers for Labjack data acquisition devices
* [http://code.google.com/p/madwimax/ madWiMAX] - A Linux driver for mobile WiMAX devices
* [https://github.com/Yubico/yubikey-personalization Yubikey Personalization] - Library and command line tool used to personalize YubiKeys.
* [https://github.com/EttusResearch/uhd USRP Hardware Driver (UHD)] - A cross-platform driver for USRP Software Defined Radios
* [https://github.com/ktossell/libuvc libuvc] - Library for webcams and other USB Video Class devices
* [http://dfu-util.sourceforge.net/ dfu-util] - Device Firmware Upgrade Utilities
* [https://dolphin-emu.org/ Dolphin Emulator] - Emulator for Nintendo video game consoles: GameCube and Wii
* [https://github.com/analogdevicesinc/libiio libIIO] - a library that provides generic access to Linux IIO devices.
* '''And many more!...'''

= Language Bindings =

* [http://usb4java.org/ usb4java] &mdash; libusb for '''Java'''
* [http://libusb-java.ch/ LibusbJava] &mdash; Another libusb binding for '''Java'''
* [https://github.com/LibUsbDotNet/LibUsbDotNet LibUsbDotNet] &mdash; libusb for '''C#''', '''.NET''' and '''Mono'''
* [https://github.com/zarthcode/Libusbpp Libusbpp] &mdash; libusb for '''C++'''
* [https://github.com/pyusb/pyusb PyUSB] &mdash; libusb for '''Python'''
* [http://github.com/vpelletier/python-libusb1 python-libusb1] &mdash; Another '''Python''' ctype-based wrapper
* [http://sourceforge.net/p/bitpim/code/HEAD/tree/trunk/bitpim/src/native/usb/ BitPim/USB] &mdash; A partial '''Python''' wrapper using swig
* [http://github.com/larskanis/libusb libusb for '''Ruby''']
* '''Haskell''' [http://hackage.haskell.org/cgi-bin/hackage-scripts/package/bindings-libusb low level] and [http://hackage.haskell.org/cgi-bin/hackage-scripts/package/usb-0.1 high level] bindings
* [https://github.com/google/gousb.git gousb] &mdash; libusb for '''Go'''
* [https://bitbucket.org/doub/luausb/overview luausb] &mdash; libusb for '''Lua'''
* [https://github.com/tessel/node-usb node-usb] &mdash; libusb for '''node.js'''
* [https://forge.ocamlcore.org/projects/ocaml-usb/ ocaml-usb] &mdash; libusb for '''OCaml'''
* [https://github.com/littledan/Factor/tree/master/extra/libusb '''Factor''' libusb bindings]
* [https://github.com/nimious/io-usb io-usb] &mdash; libusb for '''Nim'''
* [https://metacpan.org/pod/USB::LibUSB USB::LibUSB] &mdash; libusb for '''perl'''
* [https://github.com/dcuddeback/libusb-sys libusb-sys], [https://github.com/dcuddeback/libusb-rs libusb-rs] and [https://github.com/a1ien/rusb rusb] &mdash; libusb for '''Rust'''
* [https://github.com/oasynnoum/phpmake_usb php-usb] &mdash; libusb for '''php'''
* [https://github.com/brbx/libusb-d libusb-d] &mdash; libusb binding for '''D'''
* [https://github.com/tonyrog/libusb Erlang libusb] &mdash; libusb binding for '''Erlang'''
* [https://github.com/eiffel-wrap-c/wrap_libusb Eiffel libusb] &mdash; libusb binding for '''Eiffel'''
= Other Resources =

* '''[[Maintainers'-Corner|Maintainers' Corner]]'''
----
<center>[[CC_BY-SA.png|link=http://creativecommons.org/licenses/by-sa/3.0/]]</center>